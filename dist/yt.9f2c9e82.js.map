{"version":3,"sources":["yt.js"],"names":["tag","document","createElement","id","src","firstScriptTag","getElementsByTagName","parentNode","insertBefore","player","playerStatus","window","onYouTubeIframeAPIReady","YT","Player","height","width","videoId","currentSong","events","onReady","onPlayerReady","onStateChange","onPlayerStateChange","event","target","seekTo","getSeekTime","playVideo","done","getCurrentTime","now","Date","secondsSinceEpoch","Math","round","getTime","console","log","startTime","seekTime"],"mappings":"AAAA;;;;;AAMA,IAAIA,GAAG,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAV;AACAF,GAAG,CAACG,EAAJ,GAAS,aAAT;AACAH,GAAG,CAACI,GAAJ,GAAU,oCAAV;AACA,IAAIC,cAAc,GAAGJ,QAAQ,CAACK,oBAAT,CAA8B,QAA9B,EAAwC,CAAxC,CAArB;AACAD,cAAc,CAACE,UAAf,CAA0BC,YAA1B,CAAuCR,GAAvC,EAA4CK,cAA5C;AAEA,IAAII,MAAJ;AAEA,IAAIC,YAAY,GAAG,CAAC,CAApB;;AAEAC,MAAM,CAACC,uBAAP,GAAiC,YAAM;AACrCH,EAAAA,MAAM,GAAG,IAAII,EAAE,CAACC,MAAP,CAAc,QAAd,EAAwB;AAC/BC,IAAAA,MAAM,EAAE,KADuB;AAE/BC,IAAAA,KAAK,EAAE,KAFwB;AAG/BC,IAAAA,OAAO,EAAEC,WAAW,CAACf,EAHU;AAI/BgB,IAAAA,MAAM,EAAE;AACNC,MAAAA,OAAO,EAAEC,aADH;AAENC,MAAAA,aAAa,EAAEC;AAFT;AAJuB,GAAxB,CAAT;AASD,CAVD,EAYA;;;AACA,SAASF,aAAT,CAAuBG,KAAvB,EAA8B;AAC5BA,EAAAA,KAAK,CAACC,MAAN,CAAaC,MAAb,CAAoBC,WAAW,EAA/B;AACAH,EAAAA,KAAK,CAACC,MAAN,CAAaG,SAAb;AACD,EAED;AACA;AACA;;;AACA,IAAIC,IAAI,GAAG,KAAX;;AACA,SAASN,mBAAT,CAA6BC,KAA7B,EAAoC,CAEnC,CAFD,CACE;;AAGF;;;;;;;AAMA,IAAMM,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3B,MAAMC,GAAG,GAAG,IAAIC,IAAJ,EAAZ;AACA,MAAMC,iBAAiB,GAAGC,IAAI,CAACC,KAAL,CAAWJ,GAAG,CAACK,OAAJ,KAAgB,IAA3B,CAA1B;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,iBAAZ;AACA,SAAOA,iBAAP;AACD,CALD,EAOA;;;AACA,IAAMf,WAAW,GAAG;AAClBf,EAAAA,EAAE,EAAE,aADc;AAElB;AACAoC,EAAAA,SAAS,EAAE;AAHO,CAApB;;AAMA,IAAMZ,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxB,MAAMa,QAAQ,GAAGV,cAAc,KAAKZ,WAAW,CAACqB,SAAhD;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAYE,QAAZ;AACA,SAAOA,QAAP;AACD,CAJD","file":"yt.9f2c9e82.js","sourceRoot":"..","sourcesContent":["/* \n\nyoutube stuff\n\n*/\n\nvar tag = document.createElement(\"script\");\ntag.id = \"iframe-demo\";\ntag.src = \"https://www.youtube.com/iframe_api\";\nvar firstScriptTag = document.getElementsByTagName(\"script\")[0];\nfirstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\n\nvar player;\n\nvar playerStatus = -1;\n\nwindow.onYouTubeIframeAPIReady = () => {\n  player = new YT.Player(\"player\", {\n    height: \"390\",\n    width: \"640\",\n    videoId: currentSong.id,\n    events: {\n      onReady: onPlayerReady,\n      onStateChange: onPlayerStateChange\n    }\n  });\n};\n\n// 4. The API will call this function when the video player is ready.\nfunction onPlayerReady(event) {\n  event.target.seekTo(getSeekTime());\n  event.target.playVideo();\n}\n\n// 5. The API calls this function when the player's state changes.\n//    The function indicates that when playing a video (state=1),\n//    the player should play for six seconds and then stop.\nvar done = false;\nfunction onPlayerStateChange(event) {\n  //\n}\n\n/* \n\nsample queue in json\n\n*/\n\nconst getCurrentTime = () => {\n  const now = new Date();\n  const secondsSinceEpoch = Math.round(now.getTime() / 1000);\n  console.log(secondsSinceEpoch);\n  return secondsSinceEpoch;\n};\n\n// this would look like what informaiton we store on the server\nconst currentSong = {\n  id: \"sZDKP5pnhhM\",\n  // update it with arbitrary start time\n  startTime: 1586174170\n};\n\nconst getSeekTime = () => {\n  const seekTime = getCurrentTime() - currentSong.startTime;\n  console.log(seekTime);\n  return seekTime;\n};\n\n"]}