{"id":"index.html","dependencies":[{"name":"/Users/benjaminshafii/git/quarantine/.babelrc","includedInParent":true,"mtime":1585218585140},{"name":"/Users/benjaminshafii/git/quarantine/package.json","includedInParent":true,"mtime":1585218624643}],"generated":{"html":"<!DOCTYPE html>\n<html>\n  <body>\n    <!-- 1. The <iframe> (and video player) will replace this <div> tag. -->\n    <div id=\"player\"></div>\n\n    <script>// 2. This code loads the IFrame Player API code asynchronously.\nvar tag = document.createElement('script');\ntag.src = \"https://www.youtube.com/iframe_api\";\nvar firstScriptTag = document.getElementsByTagName('script')[0];\nfirstScriptTag.parentNode.insertBefore(tag, firstScriptTag); // 3. This function creates an <iframe> (and YouTube player)\n//    after the API code downloads.\n\nvar player;\n\nfunction onYouTubeIframeAPIReady() {\n  player = new YT.Player('player', {\n    height: '390',\n    width: '640',\n    videoId: 'M7lc1UVf-VE',\n    events: {\n      'onReady': onPlayerReady,\n      'onStateChange': onPlayerStateChange\n    }\n  });\n} // 4. The API will call this function when the video player is ready.\n\n\nfunction onPlayerReady(event) {\n  event.target.playVideo();\n} // 5. The API calls this function when the player's state changes.\n//    The function indicates that when playing a video (state=1),\n//    the player should play for six seconds and then stop.\n\n\nvar done = false;\n\nfunction onPlayerStateChange(event) {\n  if (event.data == YT.PlayerState.PLAYING && !done) {\n    setTimeout(stopVideo, 6000);\n    done = true;\n  }\n}\n\nfunction stopVideo() {\n  player.stopVideo();\n}</script>\n  </body>\n</html>"},"sourceMaps":null,"error":null,"hash":"8c04e9cac33230b9fa62c85f5d8d8483","cacheData":{"env":{}}}